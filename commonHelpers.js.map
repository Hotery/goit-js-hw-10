{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startButton = document.querySelector('[data-start]');\nconst dateInput = document.getElementById('datetime-picker');\nconst countdownDisplay = document.querySelector('.timer');\n\nstartButton.disabled = true;\n\nflatpickr(dateInput, {\n    allowInput: true,\n    disableMobile: true,\n    defaultDate: new Date(),\n    enableTime: true,\n    minuteIncrement: 1,\n    time_24hr: true,\n\n\n  onChange: function (selectedDates, dateStr) {\n    const selectedDate = new Date(dateStr);\n    const now = new Date();\n\n    if (selectedDate > now) {\n      startButton.disabled = false;\n      iziToast.success({\n        title: 'Success',\n      });\n    } else {\n      startButton.disabled = true;\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n    }\n  },\n});\n\nstartButton.addEventListener('click', () => {\n  const selectedDate = new Date(dateInput.value);\n  const countdownInterval = setInterval(updateCountdown, 1000);\n\n  function updateCountdown() {\n    const now = new Date();\n    const timeLeft = selectedDate - now;\n\n    if (timeLeft <= 0) {\n      clearInterval(countdownInterval);\n      countdownDisplay.textContent = '00:00:00:00';\n      iziToast.info({\n        title: 'Info',\n        message: 'Countdown timer has ended!',\n      });\n    } else {\n      const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(\n        (timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n      );\n      const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));\n      const seconds = Math.floor((timeLeft % (1000 * 60)) / 1000);\n\n      countdownDisplay.textContent = `${formatTime(days)}:${formatTime(\n        hours\n      )}:${formatTime(minutes)}:${formatTime(seconds)}`;\n    }\n  }\n\n  function formatTime(time) {\n    return time.toString().padStart(2, '0');\n  }\n});\n"],"names":["startButton","dateInput","countdownDisplay","flatpickr","selectedDates","dateStr","iziToast","selectedDate","countdownInterval","updateCountdown","timeLeft","days","hours","minutes","seconds","formatTime","time"],"mappings":"2GAKA,MAAMA,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAY,SAAS,eAAe,iBAAiB,EACrDC,EAAmB,SAAS,cAAc,QAAQ,EAExDF,EAAY,SAAW,GAEvBG,EAAUF,EAAW,CACjB,WAAY,GACZ,cAAe,GACf,YAAa,IAAI,KACjB,WAAY,GACZ,gBAAiB,EACjB,UAAW,GAGb,SAAU,SAAUG,EAAeC,EAAS,CACrB,IAAI,KAAKA,CAAO,EACzB,IAAI,MAGdL,EAAY,SAAW,GACvBM,EAAS,QAAQ,CACf,MAAO,SACf,CAAO,IAEDN,EAAY,SAAW,GACvBM,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EAEJ,CACH,CAAC,EAEDN,EAAY,iBAAiB,QAAS,IAAM,CAC1C,MAAMO,EAAe,IAAI,KAAKN,EAAU,KAAK,EACvCO,EAAoB,YAAYC,EAAiB,GAAI,EAE3D,SAASA,GAAkB,CAEzB,MAAMC,EAAWH,EADL,IAAI,KAGhB,GAAIG,GAAY,EACd,cAAcF,CAAiB,EAC/BN,EAAiB,YAAc,cAC/BI,EAAS,KAAK,CACZ,MAAO,OACP,QAAS,4BACjB,CAAO,MACI,CACL,MAAMK,EAAO,KAAK,MAAMD,EAAY,KAAoB,EAClDE,EAAQ,KAAK,MAChBF,GAAY,IAAO,GAAK,GAAK,KAAQ,IAAO,GAAK,GAC1D,EACYG,EAAU,KAAK,MAAOH,GAAY,IAAO,GAAK,KAAQ,IAAO,GAAG,EAChEI,EAAU,KAAK,MAAOJ,GAAY,IAAO,IAAO,GAAI,EAE1DR,EAAiB,YAAc,GAAGa,EAAWJ,CAAI,CAAC,IAAII,EACpDH,CACR,CAAO,IAAIG,EAAWF,CAAO,CAAC,IAAIE,EAAWD,CAAO,CAAC,EAChD,CACF,CAED,SAASC,EAAWC,EAAM,CACxB,OAAOA,EAAK,SAAU,EAAC,SAAS,EAAG,GAAG,CACvC,CACH,CAAC"}